<% provide(:title, 'Bars') %>


<h1>Bars</h1>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC-eEGhus9zRE4SpPYdnsA5bA1enVe790k&sensor=false"></script>
<script src="//google-maps-utility-library-v3.googlecode.com/svn/trunk/geolocationmarker/src/geolocationmarker-compiled.js"></script>
 <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
<script type="text/javascript">

//Map

function initialize() {
  var markers = [];

  //init googlemap
  var mapOptions = {
    zoom: 16,
      center: new google.maps.LatLng(41.8905541,-87.629036),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      panControl: false,
      mapTypeControl: false,
      streetViewControl: false,
      zoomControl: false
  };
  map = new google.maps.Map(document.getElementById('bar_list'),
        mapOptions);

  // get users location and center the map on it
  GeoMarker = new GeolocationMarker();
  GeoMarker.setCircleOptions({visible: false});
  // center map on location
  google.maps.event.addListenerOnce(GeoMarker, 'position_changed', function() {
  map.setCenter(this.getPosition());
  });

  google.maps.event.addListener(GeoMarker, 'geolocation_error', function(e) {
    alert('There was an error obtaining your position. Message: ' + e.message);
  });

  GeoMarker.setMap(map);

  //create the marker for each location and put it in the db

  <% @bars.each do |b| %>

   var infowindow = new google.maps.InfoWindow()

    marker = new google.maps.Marker({
      position: new google.maps.LatLng(<%= bar.latitude %>, <%= bar.longitude %>),
      map: map,
      icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
    });

    google.maps.event.addListener(marker, 'click', (function(marker) {
      return function() {
        infowindow.setContent(
          '<div id="windowInfo">'+
          '<%= link_to (bar_path(bar.id)) do %>' +
              '<p><%= bar.bar_name %></p>' +
              '<p><%= bar.address %></p>' +
              '</p><%= bar.phone %></p>' +
          '<% end %>' +
          '</div>'
        );
          infowindow.open(map, marker);
      }
    }) (marker));
  <% end %>

  // create search bar
    var data = (document.getElementById('pac-input'));
    var searchBox = new google.maps.places.SearchBox((data));

    // [START region_getplaces]
    // Listen for the event fired when the user selects an item from the
    // pick list. Retrieve the matching places for that item.
    google.maps.event.addListener(searchBox, 'places_changed', function() {
      var places = searchBox.getPlaces();

      for (var i = 0, marker; marker = markers[i]; i++) {
        marker.setMap(null);
      }

      // For each place, get the icon, place name, and location.
      markers = [];
      var bounds = new google.maps.LatLngBounds();
      for (var i = 0, place; place = places[i]; i++) {
        var image = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

        // Create a marker for each place.
        var marker = new google.maps.Marker({
          map: map,
          icon: image,
          title: place.name,
          position: place.geometry.location
        });

        markers.push(marker);

        bounds.extend(place.geometry.location);
      }

      map.fitBounds(bounds);
    });

    // bias search results towards places that are within the bounds of the current map's viewport.
    google.maps.event.addListener(map, 'bounds_changed', function() {
      var bounds = map.getBounds();
      searchBox.setBounds(bounds);
    });
} //end initialize

google.maps.event.addDomListener(window, 'load', initialize);

if(!navigator.geolocation) {
  alert('Your browser does not support geolocation');
}

// switching between list and map
function show_map(){
document.getElementById("bar_list").style.display = "none";
document.getElementById("bar_list").style.display = "block";
document.getElementById("pac-input").style.display = "block";
var list = document.getElementById("List");
  list.style.boxShadow = "none";
  list.style.mozBoxShadow = "none";
  list.style.webkitBoxShadow = "none";
  list.style.border = "none";
  list.style.color = "rgb(61, 71, 81)";
var map = document.getElementById("Map");
  map.style.boxShadow = "0px 3px 5px #323232";
  map.style.mozBoxShadow = "0px 3px 5px #323232";
  map.style.webkitBoxShadow = "0px 3px 5px #323232";
  map.style.color = "rgb(232, 215, 215)";
}

function show_list(){
document.getElementById("bar_list").style.display = "none";
document.getElementById("bar_list").style.display = "block";
document.getElementById("pac-input").style.display = "none";
var map = document.getElementById("Map");
  map.style.boxShadow = "none";
  map.style.mozBoxShadow = "none";
  map.style.webkitBoxShadow = "none";
  map.style.border = "none";
  map.style.color = "rgb(61, 71, 81)";
var list = document.getElementById("List");
  list.style.boxShadow = "0px 3px 5px #323232";
  list.style.mozBoxShadow = "0px 3px 5px #323232";
  list.style.webkitBoxShadow = "0px 3px 5px #323232";
  list.style.color = "rgb(232, 215, 215)";
}

</script>



<div id="bar_index_container">
  <div id="bar_nav">
    <div class="bar_nav_buttons">
      <button type="button" name="List" id="List" class ="bar_index_button" OnClick="show_list();">list</button>
    </div>
    <div class="bar_nav_buttons">
      <button type="button" name="Map" id="Map" class ="bar_index_button" OnClick="show_map();">map</button>
    </div>
    <input id="pac-input" class="controls" type="text" placeholder="Where do you want to Pau Hana Today?">
  </div>

  <div id="bar_map">
  </div>

  <div id="bar_list">
    <ul>
      <% @lbars.each do |bar| %>
        <li class="bar_tile">
          <%= link_to (bar_path(bar.id))  %>
            <div class="bar_contact">
                <ul>
                  <li class="bar_name"><%= bar.bar_name %></li>
                  <li class="bar_address"><%= bar.address %></li>
                  <li class="bar_phone"><%= bar.phone %></li>
                  <li class="bar_mi"><%= bar.distance_to([41.8905541,-87.629036]).round(1) %> mi</li>
                </ul>
            </div>
          <% end %>
        </li>
      <% end %>
    </ul>
  </div>
</div>
